print("HelloWorld")
# 한줄주석 키워드
"""여러줄 주석
입니다."""
'''이친구도 가능해요 
여러줄 주석'''

print(2025, 8, 19, sep = '/')
# 나열가능
for i in range(5):
    print(i,end = ' ')
#for문

2+3
2-5
3*3
27/4 # 실수 나누기 연산자
27%4
2**3 # 제곱 연산자 2의 3승
27//4 # 정수 나누기 연산자

# 큰수 표현 : en 
5e8 # == 5*10**8 
1e-4 # == 1 * (10 * -4)

# 비교연산자
5 = 3
5 != 3

# 논리연산자                키워드 사용
True and True       # True   // and == && 
True and False      # False  
True or True        # True   // or == ||
True or False       # True   //
False or False      # False  //
                    # ! == not

# 변수선언                  
num = 3     # == 자료형 변수명 = 값;
num2 = 12   # 변수명 = 값   // ; 구분을 위해 선택적사용
"""
변수 명명 규칙
    숫자로 시작 불가
    공백포함 불가
    예약어 사용 불가
    특수문자 _ 만 사용 가능
"""
# 값에 따라 타입이 결정된다 => 동적 타이핑 언어
a = 10      # int
a = "하이"   # str
a = 22.5    # float

# 데이터 타입 확인 
type(10)        # int
type(10.5)      # float
type("Hello")   # str
type(True)      # bool

type([1, 2])    # list
type((1, 2))    # tuple
type({1,2})     # set
type({"a" : 1})  # dict

# 문자열
 
a = '이거 문자열'
b = "이것도"
c = """이것도"""
# f"포맷"
name = "홍길동"
age = 20
f"이름 : {name} 나이 : {age}"

# 리스트 (동적 배열 자료구조)
'''특징
    - 가변
    - 순서있음
    - 중복허용'''
list = [1,2,3]      # 대괄호 [] 사용 표현
list[0] // 1        # 값에 접근할땐 인덱스 사용
list[2] = 10        # 인덱스 위치의 값 변경
'''
list = [1,2,3,4,5]
list[0]     // 1
list[2]     // 3
list[-1]    // 5 << -n 입력, 배열의 끝에서부터 읽어옴
'''

# 튜플 (list와 비슷하지만 한번 만들면 수정 불가)
'''특징
    - 불변
    - 순서있음
    - 중복허용'''
tc = (1,2,3)        # 소괄호()를 사용하여 표현 /
tc[0]   #// 1       값에 접근할땐 인덱스 사용 /
tc[1:]  #// (2,3)   변수명[인덱스]
# [1:] => : 을 붙히면 n인덱스부터 마지막 인덱스까지 지정
tc = (1,2,3,4,5)
tc[0]   # // 1
tc[-1]  # // 5
tc[0]   # = 10 << TypeError (값 변경 불가)

#세트
'''특징
    - 가변
    - 순서없음
    - 중복불가'''
set={1,2,3,3} # 

''''''
set1 = {1,2,3}
set2 = {3,4,5}
set1 | set2 // {1,2,3,4,5}  # 합집합
set & set2 // {3}           # 교집합
set1 - set2 // {1,2}        # 빼기
''''''

# 딕셔너리 (Dictionary => 사전) 키-값 한쌍의 구조
'''특징
    - 키-값 한쌍으로 데이터 저장
    - 순서 유지
    - 키는 중복불가'''

dict = { "이름" : "홍길동" , "나이" : 25}
# 중괄호 {} 를 사용하여 표현, 키-값의 구분은 : 으로 한다
# 구조확인 필수 Set 이랑 헷갈리수 있음.
dict["이름"]    #// 홍길동
dict["나이"]    #// 25
dict.get("이름")        #// "홍길동"
dict.get("주소","없음")  #// 없음

# 메소드
# keys() 모든 키를 리스트 형태로 반환   ["이름","나이"]
# values() 모든 값을 리스트 형태로 반환  ["홍길동",25]
# items() 키-값 쌍을 튜플 형태로 반환   ("이름","홍길동")